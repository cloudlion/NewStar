// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/common/packet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common {

  /// <summary>Holder for reflection information generated from proto/common/packet.proto</summary>
  public static partial class PacketReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/common/packet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PacketReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlwcm90by9jb21tb24vcGFja2V0LnByb3RvEgZjb21tb24aGnByb3RvL2Nv",
            "bW1vbi9ieXRlT2JqLnByb3RvIukBCgZwYWNrZXQSDwoHZnVuY29kZRgBIAEo",
            "BRIOCgZvcGNvZGUYAiABKAUSDAoEZGF0YRgDIAEoDBIRCgloYW1hbE5vZGUY",
            "BCABKAkSEQoJY2xpZW50UGlkGAUgASgMEhAKCHBsYXllcklkGAYgASgDEhEK",
            "CXRpbWVzdGFtcBgHIAEoAxIlCgxiYXRjaFBhY2tldHMYCCADKAsyDy5jb21t",
            "b24uYnl0ZU9iahITCgtjYXN0RGF0YUlkcxgJIAMoBRIXCg9jYXN0UmVjZWl2",
            "ZXJJZHMYCiADKAISEAoIY2xpZW50SXAYCyABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.ByteObjReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.packet), global::Common.packet.Parser, new[]{ "Funcode", "Opcode", "Data", "HamalNode", "ClientPid", "PlayerId", "Timestamp", "BatchPackets", "CastDataIds", "CastReceiverIds", "ClientIp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///for packet protocol
  /// </summary>
  public sealed partial class packet : pb::IMessage<packet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<packet> _parser = new pb::MessageParser<packet>(() => new packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.PacketReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public packet(packet other) : this() {
      funcode_ = other.funcode_;
      opcode_ = other.opcode_;
      data_ = other.data_;
      hamalNode_ = other.hamalNode_;
      clientPid_ = other.clientPid_;
      playerId_ = other.playerId_;
      timestamp_ = other.timestamp_;
      batchPackets_ = other.batchPackets_.Clone();
      castDataIds_ = other.castDataIds_.Clone();
      castReceiverIds_ = other.castReceiverIds_.Clone();
      clientIp_ = other.clientIp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public packet Clone() {
      return new packet(this);
    }

    /// <summary>Field number for the "funcode" field.</summary>
    public const int FuncodeFieldNumber = 1;
    private int funcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Funcode {
      get { return funcode_; }
      set {
        funcode_ = value;
      }
    }

    /// <summary>Field number for the "opcode" field.</summary>
    public const int OpcodeFieldNumber = 2;
    private int opcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Opcode {
      get { return opcode_; }
      set {
        opcode_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hamalNode" field.</summary>
    public const int HamalNodeFieldNumber = 4;
    private string hamalNode_ = "";
    /// <summary>
    ///used for php
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HamalNode {
      get { return hamalNode_; }
      set {
        hamalNode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientPid" field.</summary>
    public const int ClientPidFieldNumber = 5;
    private pb::ByteString clientPid_ = pb::ByteString.Empty;
    /// <summary>
    ///used for php
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ClientPid {
      get { return clientPid_; }
      set {
        clientPid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 6;
    private long playerId_;
    /// <summary>
    ///used for cast data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private long timestamp_;
    /// <summary>
    ///used for data unique
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "batchPackets" field.</summary>
    public const int BatchPacketsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Common.byteObj> _repeated_batchPackets_codec
        = pb::FieldCodec.ForMessage(66, global::Common.byteObj.Parser);
    private readonly pbc::RepeatedField<global::Common.byteObj> batchPackets_ = new pbc::RepeatedField<global::Common.byteObj>();
    /// <summary>
    ///used for batch data to signal receiver
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Common.byteObj> BatchPackets {
      get { return batchPackets_; }
    }

    /// <summary>Field number for the "castDataIds" field.</summary>
    public const int CastDataIdsFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_castDataIds_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> castDataIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///[castType,catId,subCatId]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CastDataIds {
      get { return castDataIds_; }
    }

    /// <summary>Field number for the "castReceiverIds" field.</summary>
    public const int CastReceiverIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<float> _repeated_castReceiverIds_codec
        = pb::FieldCodec.ForFloat(82);
    private readonly pbc::RepeatedField<float> castReceiverIds_ = new pbc::RepeatedField<float>();
    /// <summary>
    ///special receiver user id list
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<float> CastReceiverIds {
      get { return castReceiverIds_; }
    }

    /// <summary>Field number for the "clientIp" field.</summary>
    public const int ClientIpFieldNumber = 11;
    private string clientIp_ = "";
    /// <summary>
    ///client ip address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Funcode != other.Funcode) return false;
      if (Opcode != other.Opcode) return false;
      if (Data != other.Data) return false;
      if (HamalNode != other.HamalNode) return false;
      if (ClientPid != other.ClientPid) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Timestamp != other.Timestamp) return false;
      if(!batchPackets_.Equals(other.batchPackets_)) return false;
      if(!castDataIds_.Equals(other.castDataIds_)) return false;
      if(!castReceiverIds_.Equals(other.castReceiverIds_)) return false;
      if (ClientIp != other.ClientIp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Funcode != 0) hash ^= Funcode.GetHashCode();
      if (Opcode != 0) hash ^= Opcode.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (HamalNode.Length != 0) hash ^= HamalNode.GetHashCode();
      if (ClientPid.Length != 0) hash ^= ClientPid.GetHashCode();
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      hash ^= batchPackets_.GetHashCode();
      hash ^= castDataIds_.GetHashCode();
      hash ^= castReceiverIds_.GetHashCode();
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Funcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Funcode);
      }
      if (Opcode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Opcode);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (HamalNode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HamalNode);
      }
      if (ClientPid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(ClientPid);
      }
      if (PlayerId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(PlayerId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Timestamp);
      }
      batchPackets_.WriteTo(output, _repeated_batchPackets_codec);
      castDataIds_.WriteTo(output, _repeated_castDataIds_codec);
      castReceiverIds_.WriteTo(output, _repeated_castReceiverIds_codec);
      if (ClientIp.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ClientIp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Funcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Funcode);
      }
      if (Opcode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Opcode);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (HamalNode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HamalNode);
      }
      if (ClientPid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(ClientPid);
      }
      if (PlayerId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(PlayerId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Timestamp);
      }
      batchPackets_.WriteTo(ref output, _repeated_batchPackets_codec);
      castDataIds_.WriteTo(ref output, _repeated_castDataIds_codec);
      castReceiverIds_.WriteTo(ref output, _repeated_castReceiverIds_codec);
      if (ClientIp.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ClientIp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Funcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Funcode);
      }
      if (Opcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Opcode);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (HamalNode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HamalNode);
      }
      if (ClientPid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientPid);
      }
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      size += batchPackets_.CalculateSize(_repeated_batchPackets_codec);
      size += castDataIds_.CalculateSize(_repeated_castDataIds_codec);
      size += castReceiverIds_.CalculateSize(_repeated_castReceiverIds_codec);
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(packet other) {
      if (other == null) {
        return;
      }
      if (other.Funcode != 0) {
        Funcode = other.Funcode;
      }
      if (other.Opcode != 0) {
        Opcode = other.Opcode;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.HamalNode.Length != 0) {
        HamalNode = other.HamalNode;
      }
      if (other.ClientPid.Length != 0) {
        ClientPid = other.ClientPid;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      batchPackets_.Add(other.batchPackets_);
      castDataIds_.Add(other.castDataIds_);
      castReceiverIds_.Add(other.castReceiverIds_);
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Funcode = input.ReadInt32();
            break;
          }
          case 16: {
            Opcode = input.ReadInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 34: {
            HamalNode = input.ReadString();
            break;
          }
          case 42: {
            ClientPid = input.ReadBytes();
            break;
          }
          case 48: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 56: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 66: {
            batchPackets_.AddEntriesFrom(input, _repeated_batchPackets_codec);
            break;
          }
          case 74:
          case 72: {
            castDataIds_.AddEntriesFrom(input, _repeated_castDataIds_codec);
            break;
          }
          case 82:
          case 85: {
            castReceiverIds_.AddEntriesFrom(input, _repeated_castReceiverIds_codec);
            break;
          }
          case 90: {
            ClientIp = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Funcode = input.ReadInt32();
            break;
          }
          case 16: {
            Opcode = input.ReadInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 34: {
            HamalNode = input.ReadString();
            break;
          }
          case 42: {
            ClientPid = input.ReadBytes();
            break;
          }
          case 48: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 56: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 66: {
            batchPackets_.AddEntriesFrom(ref input, _repeated_batchPackets_codec);
            break;
          }
          case 74:
          case 72: {
            castDataIds_.AddEntriesFrom(ref input, _repeated_castDataIds_codec);
            break;
          }
          case 82:
          case 85: {
            castReceiverIds_.AddEntriesFrom(ref input, _repeated_castReceiverIds_codec);
            break;
          }
          case 90: {
            ClientIp = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
